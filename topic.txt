nano ~/.kube/config
kubectl config view
kubectl cluster-info
kubectl config current-context
kubectl config get-contexts
kubectl config use-context gke_${DEVSHELL_PROJECT_ID}_us-central1_autopilot-cluster-1

Pods Commands
kubectl exec -it new-nginx -- /bin/bash
kubectl port-forward new-nginx 10081:80
curl http://127.0.0.1:10081/test.html
source <(kubectl completion bash)
kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html


https://docs.honeycomb.io/manage-data-volume/refinery/set-up/


sudo apt-get update
sudo apt-get install apt-transport-https gnupg lsb-release
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


gcloud config set project corp-test-mgmt-anthos-3578
gcloud container fleet memberships get-credentials non-prod-ecommerce-internal
helm repo add honeycomb https://honeycombio.github.io/helm-charts
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb
helm repo update honeycomb
helm repo update
helm list -A
helm search repo honeycomb
helm install honeycomb-refinery honeycomb/refinery --namespace honeycomb
kubectl create namespace honeycomb
kubectl get ns
helm install refinery honeycomb/refinery --namespace honeycomb
helm uninstall honeycomb-refinery --namespace honeycomb
helm list -A


gcloud config set project k8s-sample-project-415615
gcloud services enable container.googleapis.com : Enable GKE API:
gcloud container clusters create nginx-cluster --num-nodes=3 --zone=europe-west2-a : Create the cluster:
gcloud container clusters get-credentials nginx-cluster --zone=europe-west2-a : Get cluster credentials:



gcloud services enable artifactregistry.googleapis.com
gcloud artifacts repositories create nginx-repo --repository-format=docker --location=europe-west2 --description="Nginx Docker repository"
gcloud auth configure-docker europe-west2-docker.pkg.dev : Configure Docker for GCP:


docker pull nginx : Pull docker image
docker tag nginx europe-west2-docker.pkg.dev/k8s-sample-project-415615/nginx-repo/nginx:latest : Tag the image
docker push europe-west2-docker.pkg.dev/k8s-sample-project-415615/nginx-repo/nginx:latest : Push the Image


gcloud artifacts repositories create httpd-repo --repository-format=docker --location=europe-west2 --description="HTTPD Docker repository"
docker pull httpd:latest
docker tag httpd:latest europe-west2-docker.pkg.dev/k8s-sample-project-415615/httpd-repo/httpd:latest
docker push europe-west2-docker.pkg.dev/k8s-sample-project-415615/httpd-repo/httpd:latest



gcloud iam service-accounts create k8s-artifact-registry-reader --display-name="Service account for Kubernetes Artifact Registry" : Create service account
gcloud projects add-iam-policy-binding k8s-sample-project-415615 --member="serviceAccount:k8s-artifact-registry-reader@k8s-sample-project-415615.iam.gserviceaccount.com" --role="roles/artifactregistry.reader" : Grant Permission to Pull Image
gcloud iam service-accounts keys create /Users/chukwuemmanuel/Desktop/k8s-artifact-registry-reader-key.json --iam-account=k8s-artifact-registry-reader@k8s-sample-project-415615.iam.gserviceaccount.com : Generate the JSON Key for the Service Account


kubectl create secret docker-registry gcr-json-key \
  --docker-server=europe-west2-docker.pkg.dev \
  --docker-username=_json_key \
  --docker-password="$(cat /Users/chukwuemmanuel/Desktop/k8s-artifact-registry-reader-key.json)" \
  --docker-email=280411639986-compute@developer.gserviceaccount.com

kubectl get secret gcr-json-key -o json | jq '.data[".dockerconfigjson"]' -r | base64 --decode | jq .

kubectl apply -f - <<EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: europe-west2-docker.pkg.dev/k8s-sample-project-415615/nginx-repo/nginx:latest
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: gcr-json-key
EOF



gcloud container clusters delete fusionauth-cluster --zone europe-west2-a

gcloud container clusters create fusionauth-cluster \
  --num-nodes=1 \
  --region=europe-west2-a \
  --enable-ip-alias \
  --cluster-ipv4-cidr=10.44.0.0/14 \
  --services-ipv4-cidr=10.48.0.0/20


https://www.appsloveworld.com/google-cloud-platform/23/unable-to-pull-artifact-registry-private-images-in-newly-created-gke-cluster


