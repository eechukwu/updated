# Define your clusters as a list of dictionaries, each containing information about a cluster.
CLUSTERS = [
    {"name": "non-prod-warehouse", "project": "corp-test-mgmt-anthos-3578", "context": "connectgateway_corp-test-mgmt-anthos-3578_global_non-prod-warehouse"},
    {"name": "non-prod-ecommerce-internal", "project": "corp-test-mgmt-anthos-3578", "context": "connectgateway_corp-test-mgmt-anthos-3578_global_non-prod-ecommerce-internal"},
    {"name": "non-prod-retail", "project": "corp-test-mgmt-anthos-3578", "context": "connectgateway_corp-test-mgmt-anthos-3578_global_non-prod-retail"},
    {"name": "non-prod-tech-enablement", "project": "corp-test-mgmt-anthos-3578", "context": "connectgateway_corp-test-mgmt-anthos-3578_global_non-prod-tech-enablement"},
    {"name": "non-prod-buying", "project": "corp-test-mgmt-anthos-3578", "context": "connectgateway_corp-test-mgmt-anthos-3578_global_non-prod-buying"},
    {"name": "prod-warehouse", "project": "corp-prod-mgmt-anthos-9061", "context": "connectgateway_corp-prod-mgmt-anthos-9061_global_prod-warehouse"},
    {"name": "prod-ecommerce-internal", "project": "corp-prod-mgmt-anthos-9061", "context": "connectgateway_corp-prod-mgmt-anthos-9061_global_prod-ecommerce-internal"},
    {"name": "prod-retail", "project": "corp-prod-mgmt-anthos-9061", "context": "connectgateway_corp-prod-mgmt-anthos-9061_global_prod-retail"},
    {"name": "prod-tech-enablement", "project": "corp-prod-mgmt-anthos-9061", "context": "connectgateway_corp-prod-mgmt-anthos-9061_global_prod-tech-enablement"},
    {"name": "prod-buying", "project": "corp-prod-mgmt-anthos-9061", "context": "connectgateway_corp-prod-mgmt-anthos-9061_global_prod-buying"},
    {"name": "non-prod-ecom", "project": "ecom-dev-fgp-anthos-2885", "context": "connectgateway_ecom-dev-fgp-anthos-2885_global_non-prod-ecom"},
    {"name": "prod-prem", "project": "ecom-dev-fgp-anthos-5383", "context": "connectgateway_ecom-dev-fgp-anthos-5383_global_prod-prem"},
    {"name": "prod-sports", "project": "ecom-dev-fgp-anthos-5383", "context": "connectgateway_ecom-dev-fgp-anthos-5383_global_prod-sports"}
]

def switch_context(cluster_info):
    """
    Switches the kubectl context to the specified cluster.
    """
    import subprocess

    context = cluster_info['context']
    cmd = ['kubectl', 'config', 'use-context', context]
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    out, err = proc.communicate()

    if proc.returncode != 0:
        print(f"Error switching to context {context}: {err.decode()}")
        return False

    print(f"Switched to context {context}")
    return True

# ANSI escape codes for coloring text.
class ANSIColors:
    RED = '\033[91m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    BLUE = '\033[94m'
    MAGENTA = '\033[95m'
    CYAN = '\033[96m'
    WHITE = '\033[97m'
    ENDC = '\033[0m'
