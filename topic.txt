provider "aws" {
  alias  = "us-east-1"
  region = "us-east-1" # Lambda@Edge functions must be created in the us-east-1 region
}

# Data source for the Lambda function's ZIP file
data "archive_file" "lambda_zip" {
  type        = "zip"
  source_dir  = "${path.module}/.." # Pointing to the project root directory
  output_path = "${path.module}/../build/fd-cf-s3-image-resizer-master.zip"
}

# Using the module to create an IAM role
module "iam_role" {
  source    = "git@github.com:fanduel/tf-module-aws-iam-role.git?ref=v2.1.0"
  role_name = "fd-cf-s3-image-resizer-role"
  service_principals = [
    "lambda.amazonaws.com",
    "edgelambda.amazonaws.com"
  ]
}

# Attach necessary policies to the IAM role created by the module
resource "aws_iam_role_policy" "lambda_policy" {
  role = module.iam_role.role_name

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = [
          "s3:GetObject",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents",
          "cloudfront:UpdateDistribution" # For Lambda@Edge
        ],
        Effect   = "Allow",
        Resource = "*"
      },
    ],
  })
}

# Define the AWS Lambda function for Lambda@Edge
resource "aws_lambda_function" "fd-cf-s3-image-resizer" {
  function_name    = "fd-cf-s3-image-resizer-master"
  handler          = "handler.resize"
  runtime          = "nodejs16.x"
  memory_size      = 128
  filename         = data.archive_file.lambda_zip.output_path
  source_code_hash = filebase64sha256(data.archive_file.lambda_zip.output_path)
  role             = module.iam_role.iam_role_arn # Reference the role ARN from the module
  publish          = true
}
