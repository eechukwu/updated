nano ~/.kube/config
kubectl config view
kubectl cluster-info
kubectl config current-context
kubectl config get-contexts
kubectl config use-context gke_${DEVSHELL_PROJECT_ID}_us-central1_autopilot-cluster-1

Pods Commands
kubectl exec -it new-nginx -- /bin/bash
kubectl port-forward new-nginx 10081:80
curl http://127.0.0.1:10081/test.html
source <(kubectl completion bash)
kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html


https://docs.honeycomb.io/manage-data-volume/refinery/set-up/


sudo apt-get update
sudo apt-get install apt-transport-https gnupg lsb-release
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


gcloud config set project corp-test-mgmt-anthos-3578
gcloud container fleet memberships get-credentials non-prod-ecommerce-internal
helm repo add honeycomb https://honeycombio.github.io/helm-charts
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb
helm repo update honeycomb
helm repo update
helm list -A
helm search repo honeycomb
helm install honeycomb-refinery honeycomb/refinery --namespace honeycomb
kubectl create namespace honeycomb
kubectl get ns


 
     

helm install refinery honeycomb/refinery --namespace honeycomb
helm uninstall honeycomb-refinery --namespace honeycomb

      - name: Retag Top 5 Most Recent Images as Rollback
        run: |
          FULL_IMAGE_NAME="${{ env.REGISTRY_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          DATE_TAG=$(date +%Y-%m-%d-%H-%M-%S)

          # Assuming gcloud is already authenticated in previous steps

          # Fetch the 5 most recent tags excluding the very latest (assumes tags are in a sortable format like semver or dates)
          RECENT_TAGS=$(gcloud container images list-tags $FULL_IMAGE_NAME --format='value(tags)' --limit=6 | tr ',' '\n' | grep -v "${{ inputs.DOCKER_IMAGE_TAG }}" | sort -r | head -n 5)

          echo "Recent tags for rollback:"
          echo "$RECENT_TAGS"

          # Loop through the recent tags and retag them for rollback
          for TAG in $RECENT_TAGS; do
              # Construct the rollback tag name
              ROLLBACK_TAG="rollback-image-${DATE_TAG}-${TAG}"
              echo "Retagging $TAG as $ROLLBACK_TAG"
              
              # Pull the specific tag
              docker pull $FULL_IMAGE_NAME:$TAG
              
              # Tag it with the new rollback tag and push
              docker tag $FULL_IMAGE_NAME:$TAG $FULL_IMAGE_NAME:$ROLLBACK_TAG
              docker push $FULL_IMAGE_NAME:$ROLLBACK_TAG
          done

