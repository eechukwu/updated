nano ~/.kube/config
kubectl config view
kubectl cluster-info
kubectl config current-context
kubectl config get-contexts
kubectl config use-context gke_${DEVSHELL_PROJECT_ID}_us-central1_autopilot-cluster-1

Pods Commands
kubectl exec -it new-nginx -- /bin/bash
kubectl port-forward new-nginx 10081:80
curl http://127.0.0.1:10081/test.html
source <(kubectl completion bash)
kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html


https://docs.honeycomb.io/manage-data-volume/refinery/set-up/


sudo apt-get update
sudo apt-get install apt-transport-https gnupg lsb-release
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


gcloud config set project corp-test-mgmt-anthos-3578
gcloud container fleet memberships get-credentials non-prod-ecommerce-internal
helm repo add honeycomb https://honeycombio.github.io/helm-charts
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb
helm repo update honeycomb
helm repo update
helm list -A
helm search repo honeycomb
helm install honeycomb-refinery honeycomb/refinery --namespace honeycomb
kubectl create namespace honeycomb
kubectl get ns


 
     
# New Step 4: Retag the top 5 most recent images as rollback-image-date
- name: Retag Top 5 Most Recent Images as Rollback
  run: |
    FULL_IMAGE_NAME="${{ env.REGISTRY_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
    DATE_TAG=$(date +%Y%m%d%H%M%S)

    # Fetch all image tags and sort them in descending order
    ALL_TAGS=$(gcloud artifacts docker images list $FULL_IMAGE_NAME --limit=10 --format='value(tags)' | sort -r)

    # Initialize count
    COUNT=1

    for TAG in $ALL_TAGS; do
        if [ $COUNT -le 5 ]; then
            # Retag the top 5 most recent images with rollback-image<index>
            docker tag $FULL_IMAGE_NAME:$TAG $FULL_IMAGE_NAME:rollback-image$COUNT
            docker push $FULL_IMAGE_NAME:rollback-image$COUNT
            let COUNT++
        else
            break # Stop the loop after tagging the top 5 images
        fi
    done
