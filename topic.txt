nano ~/.kube/config
kubectl config view
kubectl cluster-info
kubectl config current-context
kubectl config get-contexts
kubectl config use-context gke_${DEVSHELL_PROJECT_ID}_us-central1_autopilot-cluster-1

Pods Commands
kubectl exec -it new-nginx -- /bin/bash
kubectl port-forward new-nginx 10081:80
curl http://127.0.0.1:10081/test.html
source <(kubectl completion bash)
kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html


https://docs.honeycomb.io/manage-data-volume/refinery/set-up/


sudo apt-get update
sudo apt-get install apt-transport-https gnupg lsb-release
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


gcloud config set project corp-test-mgmt-anthos-3578
gcloud container fleet memberships get-credentials non-prod-ecommerce-internal
helm repo add honeycomb https://honeycombio.github.io/helm-charts
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb
helm repo update honeycomb
helm repo update
helm list -A
helm search repo honeycomb
helm install honeycomb-refinery honeycomb/refinery --namespace honeycomb
kubectl create namespace honeycomb
kubectl get ns


 
     

helm install refinery honeycomb/refinery --namespace honeycomb
helm uninstall honeycomb-refinery --namespace honeycomb


- name: Retag and Push Top 5 Images as Rollback
  run: |
    FULL_IMAGE_NAME="${{ env.REGISTRY_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}"
    DATE_TAG=$(date "+%Y%m%d")
    EXCLUDE_TAG="${{ inputs.DOCKER_IMAGE_TAG }}"

    # Authenticate with Google Cloud
    echo "${{ secrets.GCLOUD_AUTH }}" | gcloud auth activate-service-account --key-file=-
    # Configure Docker to use the credentials
    gcloud auth configure-docker ${{ env.REGISTRY_HOST }}

    # Fetch the latest 6 tags (assuming the newest is not desired), excluding the latest push, and pick the top 5
    IFS=$'\n' read -r -d '' -a IMAGE_TAGS <<< "$(gcloud artifacts docker images list $FULL_IMAGE_NAME --format='get(tags)' --limit=6 | grep -v "$EXCLUDE_TAG" | tr ',' '\n' | head -n 5)"
    
    for TAG in "${IMAGE_TAGS[@]}"; do
      if [ ! -z "$TAG" ]; then
        # Construct the new tag
        NEW_TAG="rollback-image-${DATE_TAG}-${TAG}"
        echo "Creating and pushing new tag: $NEW_TAG for $TAG"

        # Pull the original image
        docker pull $FULL_IMAGE_NAME:$TAG
        
        # Tag it with the new rollback tag
        docker tag $FULL_IMAGE_NAME:$TAG $FULL_IMAGE_NAME:$NEW_TAG
        
        # Push the new tag to the registry
        docker push $FULL_IMAGE_NAME:$NEW_TAG
      fi
    done
  env:
    GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}


