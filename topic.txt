locals {
  # AWS Provider configuration
  aws_region = "us-east-1"
  aws_alias  = "us-east-1"

  # Lambda function configuration
  lambda_function_name = "fd-cf-s3-image-resizer-master"
  lambda_handler       = "handler.resize"
  lambda_runtime       = "nodejs16.x"
  lambda_memory_size   = 128
  lambda_source_dir    = "${path.module}/../../"
  lambda_output_path   = "${path.module}/build/${local.lambda_function_name}.zip"

  # IAM role name for Lambda function
  iam_role_name = "fd-cf-s3-image-resizer-role"
}


.................................................................

provider "aws" {
  alias  = local.aws_alias
  region = local.aws_region
}

# Data source for the Lambda function's ZIP file
data "archive_file" "lambda_zip" {
  type        = "zip"
  source_dir  = local.lambda_source_dir
  output_path = local.lambda_output_path
}

# Use the module for creating the IAM role
module "iam_role" {
  source            = "git@github.com:fanduel/tf-module-aws-iam-role.git?ref=v2.1.0"
  role_name         = local.iam_role_name
  service_principals = [
    "lambda.amazonaws.com",
    "edgelambda.amazonaws.com"
  ]
}

# Define the AWS Lambda function for Lambda@Edge
resource "aws_lambda_function" "fd-cf-s3-image-resizer" {
  function_name    = local.lambda_function_name
  handler          = local.lambda_handler
  runtime          = local.lambda_runtime
  memory_size      = local.lambda_memory_size
  filename         = data.archive_file.lambda_zip.output_path
  source_code_hash = filebase64sha256(data.archive_file.lambda_zip.output_path)
  role             = module.iam_role.iam_role_arn # Assuming the module exports the role ARN
  publish          = true
}

# Outputs
output "lambda_at_edge_function_name" {
  value = aws_lambda_function.fd-cf-s3-image-resizer.function_name
}

output "lambda_at_edge_function_arn" {
  value = aws_lambda_function.fd-cf-s3-image-resizer.arn
}
