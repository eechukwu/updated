nano ~/.kube/config
kubectl config view
kubectl cluster-info
kubectl config current-context
kubectl config get-contexts
kubectl config use-context gke_${DEVSHELL_PROJECT_ID}_us-central1_autopilot-cluster-1

Pods Commands
kubectl exec -it new-nginx -- /bin/bash
kubectl port-forward new-nginx 10081:80
curl http://127.0.0.1:10081/test.html
source <(kubectl completion bash)
kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html


https://docs.honeycomb.io/manage-data-volume/refinery/set-up/


sudo apt-get update
sudo apt-get install apt-transport-https gnupg lsb-release
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


gcloud config set project corp-test-mgmt-anthos-3578
gcloud container fleet memberships get-credentials non-prod-ecommerce-internal
helm repo add honeycomb https://honeycombio.github.io/helm-charts
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb
helm repo update honeycomb
helm repo update
helm list -A
helm search repo honeycomb
helm install honeycomb-refinery honeycomb/refinery --namespace honeycomb
kubectl create namespace honeycomb
kubectl get ns
helm install refinery honeycomb/refinery --namespace honeycomb
helm uninstall honeycomb-refinery --namespace honeycomb
helm list -A

Good morning, Steven. I might not be able to make the standup today because my internet connection will be down for some repairs, due to issues caused by the recent wind. However, my tickets are up to date, and Shaun is also aware of what I am working on. Here are the links to my tickets:

helm install harbor harbor/harbor -n harbor -f my-harbor-values.yaml


Subject: 🚨 Urgent: [App Name] on [Cluster Name] Error Alert 🚨

Hi Team,

🔔 Alert from PagerDuty: We've detected an issue with [App Name] on [Cluster Name]. 🛠️ Can someone investigate this ASAP?

Thanks,


# Download NGINX from Docker Hub
docker pull nginx

# Tag the NGINX image for your Harbor registry
docker tag nginx <your-harbor-registry>/te-core-harbor-xxxx.com/nginx

# Log in to your Harbor registry
docker login <your-harbor-registry> -u admin -p <your-harbor-admin-password>

# Push the tagged NGINX image to your Harbor registry
docker push <your-harbor-registry>/te-core-harbor-xxxx.com/nginx

# Deploy NGINX from your Harbor registry into your GCP cluster
kubectl create deployment nginx-deployment --image=<your-harbor-registry>/te-core-harbor-xxxx.com/nginx

# Expose NGINX using a LoadBalancer service
kubectl expose deployment nginx-deployment --name=nginx-service --type=LoadBalancer --port=80 --target-port=80

# Wait for the external IP to be provisioned
kubectl get svc nginx-service

# Access NGINX using the external IP




[Your Name] 🌟



