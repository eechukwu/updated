nano ~/.kube/config
kubectl config view
kubectl cluster-info
kubectl config current-context
kubectl config get-contexts
kubectl config use-context gke_${DEVSHELL_PROJECT_ID}_us-central1_autopilot-cluster-1

Pods Commands
kubectl exec -it new-nginx -- /bin/bash
kubectl port-forward new-nginx 10081:80
curl http://127.0.0.1:10081/test.html
source <(kubectl completion bash)
kubectl cp ~/test.html $my_nginx_pod:/usr/share/nginx/html/test.html


https://docs.honeycomb.io/manage-data-volume/refinery/set-up/


sudo apt-get update
sudo apt-get install apt-transport-https gnupg lsb-release
curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm


gcloud config set project corp-test-mgmt-anthos-3578
gcloud container fleet memberships get-credentials non-prod-ecommerce-internal
helm repo add honeycomb https://honeycombio.github.io/helm-charts
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb/refinery
helm repo update refinery honeycomb
helm repo update honeycomb
helm repo update
helm list -A
helm search repo honeycomb
helm install honeycomb-refinery honeycomb/refinery --namespace honeycomb
kubectl create namespace honeycomb
kubectl get ns


 
     

helm install refinery honeycomb/refinery --namespace honeycomb
helm uninstall honeycomb-refinery --namespace honeycomb


- name: Retag Top 5 Most Recent Images as Rollback
  run: |
    FULL_IMAGE_NAME="${{ env.REGISTRY_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
    DATE_TAG=$(date +%Y%m%d%H%M%S)

    # Fetch the latest 6 image digests, excluding the most recent push
    IMAGE_DIGESTS=$(gcloud container images list --repository=$FULL_IMAGE_NAME --format='get(digest)' --limit=6 | tail -n +2)

    # Initialize a counter for tagging the top 5 excluding the very latest
    COUNT=0

    echo "Processing for rollback tagging..."
    for DIGEST in $IMAGE_DIGESTS; do
      if [ $COUNT -lt 5 ]; then
        NEW_TAG="rollback-image-${DATE_TAG}-${COUNT}"
        echo "Tagging $DIGEST as $NEW_TAG"
        
        # Tagging the digest with the new rollback tag
        gcloud container images add-tag $FULL_IMAGE_NAME@$DIGEST $FULL_IMAGE_NAME:$NEW_TAG --quiet
        
        let COUNT++
      else
        break # Exit the loop after processing 5 images
      fi
    done
